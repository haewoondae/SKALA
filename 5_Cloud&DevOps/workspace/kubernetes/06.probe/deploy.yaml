apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk003-myfirst-api-server
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sk003-myfirst-api-server
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        update: 54c0775a
      labels:
        app: sk003-myfirst-api-server
    spec:
      serviceAccountName: default
      containers:
        - name: myfirst-api-server
          image: amdp-registry.skala-ai.com/skala25a/sk003-myfirst-api-server:1.0.0
          imagePullPolicy: Always
          env:
            - name: USER_NAME
              value: sk003
            - name: NAMESPACE
              value: skala-practice
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              initialDelaySeconds: 5 # 컨테이너 시작 후 5초 뒤 체크 시작
              periodSeconds: 10 # 10초마다 체크
              timeoutSeconds: 3 # 응답 없으면 3초 후 실패 간주
              failureThreshold: 3 # 3번 연속 실패 시 컨테이너 재시작
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              initialDelaySeconds: 5 # 컨테이너 시작 후 5초 뒤 체크 시작
              periodSeconds: 10 # 10초마다 체크
              timeoutSeconds: 3 # 응답 없으면 3초 후 실패 간주
              failureThreshold: 3 # 3번 연속 실패 시 트래픽에서 제외
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: sk003-myfirst-configmap
            items:
              - key: application-prod.yaml
                path: application-prod.yaml
